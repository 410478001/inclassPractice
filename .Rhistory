library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
View(student)
View(student)
head(student)
s10<-student[1,10]
s10<-student[1:10]
s10<-student[1:10,]
s10
student[1:10,]
student[1:10]
student[1,10]
student[1:10,]
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
factor(gender,"男性"="Male")
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
factor(gender,"男性"="Male",ordered=TRUE)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
factor(gender,"男性"="Male")->gender
factor(gender,"男性"=Male)->gender
factor("男性",replacement="Male",gender)->gender
c("男性",replacement="Male",gender)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
c("男性",replacement="Male","女性"replacement= "Female",gender)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
c("男性",replacement="Male","女性",replacement="Female",gender)->gender
gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
gsub("男性",replacement="Male","女性",replacement="Female",gender)->gender
?
gender("男性"="Male")->gender
gender
gender("男性"="Male")->gender
gender("男性"="Male")->gender
sub("男性"="Male")->gender
sub("男性",replacement="Male",gender)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
sub("男性",replacement="Male","女性",replacement="Female",gender)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
sub("男性",replacement="Male",gender)->gender
gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
sub("男性",replacement="Male","女性",replacement="Female",gender)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
sub("男性",replacement="Male",gender,"女性",replacement="Female",gender)->gender
sub("男性",replacement="Male","女性",replacement="Female",gender)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
sub("男性",replacement="Male",gender)->gender
gender
sub("男性",replacement="Male","女性",replacement="Female",gender)->gender
as.factor(gender$"男性"="Male")->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender$"男性"="Male",ordered=TRUE)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender,"男性"="Male",ordered=TRUE)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender$"男性"="Male",ordered=TRUE)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender("男性"="Male",ordered=TRUE))->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender$"男性"="Male",ordered=TRUE)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender$"男性"as"Male",ordered=TRUE)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender$"男性" -> "Male",ordered=TRUE)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender$"男性"  "Male")->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender$"男性" = "Male")->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender$"男性" ->> "Male")->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender,"男性" ->> "Male")->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor("男性" ->> "Male",gender)->gender
as.factor(c(rep("男性","Male")))->gender
?factor
factor(gender,levels=c("Male","Female",ordered=TRUE))->gender
gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
factor(gender,levels=c("男性"="Male","女性"="Female",ordered=TRUE))->gender
gender
factor(gender,c("男性"="Male","女性"="Female",ordered=TRUE))->gender
gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
factor(gender,c("男性"="Male","女性"="Female",ordered=TRUE))->gender
gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
factor(gender,rep("男性"="Male","女性"="Female",ordered=TRUE))->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
gender
factor(gender,ordered("男性"="Male","女性"="Female"))->gender
factor(gender,labels("男性"="Male","女性"="Female"))->gender
factor(gender,c("男性"="Male","女性"="Female",ordered=TRUE))->gender
gender
factor(gender,labels = ("男性"="Male","女性"="Female",ordered=TRUE))->gender
factor(gender,labels("男性"="Male","女性"="Female",ordered=TRUE))->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
as.factor(gender)
as.factor(gender,levels("男性"="Male","女性"="Female"))
as.factor(gender,levels("男性"="Male"))
as.factor(gender,levels="Male")
factor(gender,levels="Male")
factor(gender)
factor(gender,levels = gender,ordered = TRUE)->gender
factor(gender,levels = gender(c("Male","Female")),ordered = TRUE)->gender
factor(gender,levels = c("Male","Female"),ordered = TRUE)->gender
factor(gender,levels = c("Male","Female"),ordered = TRUE)->gender,
factor(gender,levels = c("Male","Female"),ordered = TRUE)
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
gender
factor(gender)
factor(gender,levels,"男性" = c("Male"),ordered = TRUE)
ordered
factor(gender,levels,"男性" = "Male",ordered = TRUE)
factor(gender,levels("男性" = "Male"),ordered = TRUE)
factor(gender,levels(男性 = "Male"),ordered = TRUE)
factor(gender,levels("男性" -> "Male"),ordered = TRUE)
factor(gender,levels(男性 -> "Male"),ordered = TRUE)
factor(gender,levels("男性" -> "Male"),ordered = TRUE)
factor(gender,levels("男性" -> "Male","女性"="Female"),ordered = TRUE)
factor(gender,levels("男性" -> "Male","女性"->"Female"),ordered = TRUE)
factor(gender,levels("男性" -> "Male" "女性"->"Female"),ordered = TRUE)
\factor(gender,("男性"="Male","女性"="Female"))->gender
factor(gender,levels("男性" -> "Male"\"女性"->"Female"),ordered = TRUE)
factor(gender,levels("男性" -> "Male"),ordered = TRUE)
factor(gender,levels("男性" -> "Male"),ordered = FALSE)
factor(gender,levels("男性" -> "Male"),ordered = FALSE)->gender
gender
factor(gender,c("男性" -> "Male"),ordered = FALSE)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
factor(gender,c("男性" -> "Male"),ordered = FALSE)->gender
gender
factor(gender,c("男性" -> "Male","女性"->"Female"),ordered = FALSE)->gender
gender
factor(gender,c("男性" -> "Male","女性"->"Female"),ordered = FALSE)->gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
gender
factor(gender,c("男性" -> "Male"),ordered = FALSE)->gender
gender
factor(gender,sub("男性" -> "Male"),ordered = FALSE)->gender
factor(gender,"男性" -> "Male",ordered = FALSE)->gender
gender
gender <- c("男性", "男性", "女性", "男性", "女性", "男性")
gender
factor(gender,"男性" -> "Male",ordered = FALSE)->gender
gender
factor(gender,"Male",ordered = FALSE)->gender
gender
factor(gender,"男性" <-"Male",ordered = FALSE)->gender
gender
a <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="month")
library(dplyr)
library(lubridate)
?str_sub()
hw <- "Hadley Wickham"
str_sub(hw, 1, 6)
library("stringr", lib.loc="~/R/win-library/3.3")
install.packages("stringr")
hw <- "Hadley Wickham"
str_sub(hw, 1, 6)
hw <- "Hadley Wickham"
str_sub(hw, 1, 6)
library(stringr)
hw <- "Hadley Wickham"
str_sub(hw, 1, 6)
str_sub(hw, 8, 14)
str_sub(hw, 8)
str_sub(hw, c(1, 8), c(6, 14))
str_sub(hw, 1, 6)
str_sub(hw, end = 6)
str_sub(hw, 8, 14)
str_sub(hw, 8)
str_sub(hw, c(1, 8), c(6, 14))
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
hw <- "Hadley Wickham"
library(stringr)
str_sub(hw, 1, 6)
str_sub(hw, end = 6)
str_sub(hw, 8, 14)
str_sub(hw, 8)
str_sub(hw, c(1, 8), c(6, 14))
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
library(readr)
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
View(studentID)
sub(4104)
library(readr)
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
View(studentID)
library(readr)
githubData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/githubData.csv")
View(githubData)
str_sub(studentID,6,7)
str_sub(studentID$學號,6,7)
str_sub(studentID$學號,6,7)->a
table(a)
str_sub(studentID$學號,7,8)->a
View(studentID)
str_sub(studentID$學號,5,6)->a
table(a)
View(studentID)
str_sub(studentID$學號,5,6)->a
table(a)
str_sub(hw, -1)
str_sub(hw, -7)
str_sub(hw, end = -7)
str_sub(hw, pos)
pos <- str_locate_all(hw, "[aeio]")[[1]]
View(pos)
pos <- str_locate_all(hw, "[aei]")[[1]]
pos <- str_locate_all(hw, "[aeim]")[[1]]
pos <- str_locate_all(hw, "[ae]")[[1]]
View(pos)
pos <- str_locate_all(hw, "[aeio]")[[1]]
hw <- "Hadley Wickhamaa"
pos <- str_locate_all(hw, "[aeio]")[[1]]
View(pos)
hw <- "Hadley Wickham"
pos <- str_locate_all(hw, "[aeio]")[[1]]
str_sub(hw, pos)
str_sub(hw, pos[, 1], pos[, 2])
str_sub(hw, pos)
str_c("lowercase: ", letters, ", capital: ", LETTERS)
str_c(letters,LETTERS)
str_c(letters,LETTERS,sep="-")
str_c("lowercase: ", letters, ", capital: ", LETTERS)
githubData[c(2,3,4),] -> sampleGithub
str_c(sampleGithub$`GitHub username`,
sampleGithub$`GitHub repo name`)
str_c("https://github.com/",
sampleGithub$`GitHub username`,
"/",
sampleGithub$`GitHub repo name`)
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
View(filmVotingData)
?str_split_fixed
fruits <- c(
"apples and oranges and pears and bananas",
"pineapples and mangos and guavas")
str_split_fixed(fruits, " and ", 3)
str_split_fixed(fruits, " and ", 4)
str_split_fixed(filmVotingData,",",2)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,",",2)
View(filmVotingData)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,",",3)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,",",3)->z
dim(z)
zz->c(z)```
zz<-c(z)```
zz<-c(z)
table(zz)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,"by",",",5)->z
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,",",3)->z
民國年月<-c("1099/01/01","1099/02/01","1099/03/01")
?lubridate
?years()
?years
民國年月<-c("099/01","099/02","099/03")
str_c("lowercase: ", letters, ", capital: ", LETTERS)
str_c("1",民國年月,"/01")
民國年月<-str_c("1",民國年月,"/01")
Year <- TyphoonData$年份
library(readr)
library(stringr)
library(lubridate)
?lubridate
??lubridate
TyphoonData <- read_csv("https://raw.githubusercontent.com/GaryLKL/course-programming-for-ds-Quiz/master/TyphoonData.csv", col_types = cols(.default = col_character()))
Year <- TyphoonData$年份
library(lubridate)
library(lubridate)
library(lubridate)
library(lubridate)
install.packages("lubridate")
library(readr)
library(stringr)
library(lubridate)
install.packages("lubridate")
library(readr)
library(stringr)
library(lubridate)
TyphoonData <- read_csv("https://raw.githubusercontent.com/GaryLKL/course-programming-for-ds-Quiz/master/TyphoonData.csv", col_types = cols(.default = col_character()))
Year <- TyphoonData$年份
民國年月<-c("099/01","099/02","099/03")
Year <- TyphoonData$年份
Year
Year<-as.integer(Year)
Year<-Year-1911
Year
Year <- TyphoonData$年份
Year<-as.integer(Year)
Year
library(readr)
library(stringr)
library(lubridate)
TyphoonData <- read_csv("https://raw.githubusercontent.com/GaryLKL/course-programming-for-ds-Quiz/master/TyphoonData.csv", col_types = cols(.default = col_character()))
Year <- TyphoonData$年份
Year<-as.integer(Year)
Year<-Year-1911
Year <- as.character(Year)
Year <- str_c("民國", Year, "年")
library(readr)
library(stringr)
TyphoonData <- read_csv("https://raw.githubusercontent.com/GaryLKL/course-programming-for-ds-Quiz/master/TyphoonData.csv", col_types = cols(.default = col_character()))
Time <- TyphoonData$發布警報時間
Time
library(readr)
library(stringr)
TyphoonData <- read_csv("https://raw.githubusercontent.com/GaryLKL/course-programming-for-ds-Quiz/master/TyphoonData.csv", col_types = cols(.default = col_character()))
Time <- TyphoonData$發布警報時間
library(stringr)
time <- str_sub(Time, start = 6, end = 7)
table(time)
library(readr)
library(stringr)
TyphoonData <- read_csv("https://raw.githubusercontent.com/GaryLKL/course-programming-for-ds-Quiz/master/TyphoonData.csv", col_types = cols(.default = col_character()))
Time <- TyphoonData$發布警報時間
time <- str_sub(Time, start = 6, end = 7)
table(time)
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,", ",3)->z
library(stringr)
library(stringr)
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,", ",3)->z
dim(z)
zz<-c(z)
table(zz)
zz
View(z)
View(z)
View(filmVotingData)
View(filmVotingData)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,",  ",3)->z
dim(z)
zz<-c(z)
table(zz)
zz
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,", ",3)->z
dim(z)
zz<-c(z)
table(zz)
zz
View(z)
View(z)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c(",","by"),2)->z
dim(z)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c(",","by"),4)->z
dim(z)
View(z)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,"by",4)->z
dim(z)
View(z)
View(z)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,",","by",4)->z
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,(",","by"),4)->z
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c(",","by"),4)->z
dim(z)
View(z)
View(z)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c("," "by"),4)->z
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c(",","by"),4)->z
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c(",","by",4)->z
dim(z)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c(",","by",4)->z
dim(z)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c(",","by",4))->z
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c(",","by"),4)->z
dim(z)
library(stringr)
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c(",","by"),4)->z
View(z)
View(z)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c("by",","),4)->z
View(z)
View(z)
install.packages("googlesheets")
library(googlesheets)
gs_auth(new_user = TRUE)
gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
View(classSurvey)
View(z)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,c(("by",2)(",",2)))->z
library(readr)
bankdata <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/bankdata.csv")
library(readr)
bankdata <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/bankdata.csv")
bankdata <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/bankdata.csv")
View(bankdata)
as.factor(bankdata$"銀行")->bankdata$"銀行"
as.factor(bankdata$"銀行")->bankdata$"銀行"
View(bankdata)
library(stringr)
str_c(bankdata$"年月"+1911)
str_c("1",bankdata$"年月")
bankdata$"年月"<-str_c("1",bankdata$"年月")
bankdata$"年月"<-as.numeric(bankdata$"年月")+911
View(bankdata)
View(bankdata)
bankdata$"年月"<-as.numeric(bankdata$"年月")
library(readr)
bankdata <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/bankdata.csv")
View(bankdata)
library(stringr)
bankdata$"年月"<-str_c("1",bankdata$"年月")
bankdata$"年月"<-as.numeric(bankdata$"年月")
View(bankdata)
bankdata$"年月"<-as.data.frame.Date(bankdata$"年月")
View(bankdata)
library(readr)
bankdata <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/bankdata.csv")
bankdata$"年月"<-str_c("1",bankdata$"年月")
View(bankdata)
bankdata$"年月"+year(911)
bankdata$"年月"+years(911)
bankdata <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/bankdata.csv")
as.factor(bankdata$"銀行")->bankdata$"銀行"
library(readr)
bankdata <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/bankdata.csv")
as.factor(bankdata$"銀行")->bankdata$"銀行"
bankdata$"年月"<-as.data.frame.Date(bankdata$"年月")
View(bankdata)
View(bankdata)
bankdata$"年月"+years(911)
bankdata$"年月"<-as.data.frame.Date(bankdata$"年月")
library(readr)
bankdata <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/bankdata.csv")
as.data.frame.Date(bankdata$"年月")
ym(bankdata$"年月")
ymd(bankdata$"年月")
library(lubridate)
s<-ym(bankdata$"年月")
s<-ymd(bankdata$"年月")
s<-ym(bankdata$"年月")
bankdata$"年月"<-str_c("1",bankdata$"年月")
s<-ym(bankdata$"年月")
s<-ymd(bankdata$"年月")
?ymd
View(bankdata)
bankdata$"年月"<-str_c("1",bankdata$"年月","/01")
s<-ymd(bankdata$"年月")
View(bankdata)
library(readr)
bankdata <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/bankdata.csv")
bankdata$"年月"<-str_c("1",bankdata$"年月","/01")
s<-ymd(bankdata$"年月")
bankdata$"年月"+years(911)
bankdata$"年月"<-ymd(bankdata$"年月")
bankdata$"年月"+years(911)
View(bankdata)
bankdata$"年月"<-str_sub(bankdata$"年月",1,7)
View(bankdata)
library(readr)
bankdata <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/bankdata.csv")
as.factor(bankdata$"銀行")->bankdata$"銀行"
library(stringr)
library(lubridate)
bankdata$"年月"<-str_c("1",bankdata$"年月","/01")
bankdata$"年月"<-ymd(bankdata$"年月")
bankdata$"年月"<-bankdata$"年月"+years(911)
bankdata$"年月"<-str_sub(bankdata$"年月",1,7)
View(bankdata)
`將"2018/30/09 00:00 UTC"
Time<-"2018/30/09 00:00 UTC"
Time<-"2018/30/09 00:00 UTC"
Time<-c("2018/30/09 00:00 UTC")
time<-c("2018/30/09 00:00 UTC")
t<-c("2018/30/09 00:00 UTC")
library(lubridate)
t<-c("2018/30/09 00:00 UTC")
library(lubridate)
t<-c("2018/30/09 00:00 UTC")
library(lubridate)
t<-c("2018/30/09 00:00 UTC")
?lubridate
?lubridate:with_tz()
?lubridate::with_tz()
?lubridate:with_tz()
?lubridate:grep()
?grep()
t<-ydm_hm(t)
t<-ydm_hms(t)
t<-c("2018/30/09 00:00 UTC")
t<-ydm_hms(t)
t<-ydm_hm(t)
t<-c("2018/30/09 00:00 UTC")
t<-ydm_hm(t)
t<-c("2018/30/09 10:00 UTC")
t<-ydm_hm(t)
t<-c("2018/30/09 00:00 UTC")
t<-ydm_hm(t)
grep("Taipei",OlsonNames(),value=TRUE)
grep("Taipei",OlsonNames(),value=TRUE)
grep("Taipei",OlsonNames(t),value=TRUE)
grep("Taipei",OlsonNames(time),value=TRUE)
grep("Taipei",OlsonNames(),value=TRUE)
lubridate::with_tz(t)
t<-c("2018/30/09 00:00 UTC")
t<-ydm_hm(t)
lubridate::with_tz(t)
grep("Taipei",OlsonNames(),value=TRUE)
lubridate::with_tz(t)
